指针变量作为函数参数
没有指针的函数能且只能通过return返回一个值，而使用指针变量的函数可以同时改变很多变量的值，善用指针变量。
例见po3.c,po4.c

指针的加减法表示向后（前）移一个相应数据类型大小的储存空间。
在指针指向数组元素的时候，对指针进行加减运算，＋１表示指向同一数组的下一个元素，－１表示指向同一数组的上一个元素。
指向同一数组的两个指针变量的差就是这两个数组元素的相对距离。

数组的引用可以有两种形式：
(1)a[n];
数组的下标法引用。
(2)*(a + n);
数组的指针法引用。
（2）较（1）快，因为C编译系统会将（1）转换为（2）的形式进行处理。
注意数组名不能进行自加运算，因为数组名相当于一个地址常量，值不能改变。

通过指针引用数组
(1)int *p = a;
   *(p++);
此种方法效率较高，因为指针变量直接指向数组元素，不必每次都重新计算地址，且自增自减的运算效率比加减法高。例见prinpo.c

(2)int *p = a;
   p[n];
相当于指针法转换为下标法引用。当且仅当指针指向数组首地址的时候，p[n]才和a[n]相等，所以尽量不要使用这种容易混淆的方法。
